#!/usr/bin/env python3
'''
Script to be used on the command line, it uses the first 
argument to search for modules on pypi websearch
'''

from re import findall, IGNORECASE
from urllib.request import urlopen
from typing import List
import sys

class Results:

    def __init__(self, q):
        self.q = q
        self.response = self._get_response()
        try:
            self.results = self._get_results()
        except:
            self.results = 'Result not found'

    def __repr__(self) -> str:
        return ''.join(self.results)

    def _get_response(self) -> str:
        # Returns the decoded data from a response got with 
        # urllib.request.urlopen to be scraped with a re.findall or re.finditer
        URL_BASE = 'https://pypi.org/search/?q='
        content = urlopen(URL_BASE + self.q).read().decode('UTF-8')
        return content

    def _get_results(self) -> List[str]:
        # Scrapes for name, version and description from the html received
        # from _get_response() using re.findall. The ideal would be to use 
        # re.finditer to lazily grab only the five results that I want
        names = findall('<span class="package-snippet__name">*' + \
                '(.*)</span>', self.response,IGNORECASE)
        versions = findall('<span class="package-snippet__version">*' + \
                '(.*)</span>', self.response,IGNORECASE)
        descr = findall('<p class="package-snippet__description">*' + \
                '(.*)</p>', self.response,IGNORECASE)

        # Returns a list of str, where the module name is colored green by the
        # ANSI escape sequence in the terminal, with version number and
        # small description in a new line
        return [f"\033[1;32m{names[i]}\033[00m {versions[i]}\n    {descr[i]}\n"
                for i in range(5)]



if __name__ == '__main__':

    # Exits if no argument was passed
    if len(sys.argv) < 2:
        print('\nEmpty search string.\n' + \
              'Use pip search <module> or pypi_search <module>')
        sys.exit(1)

    q = sys.argv[1]
    print(Results(q))
